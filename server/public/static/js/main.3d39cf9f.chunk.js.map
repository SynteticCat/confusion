{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/ContactComponent.js","components/AboutComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/CommentForm.js","components/DishdetailComponent.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/feedbacks.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leaderLoading","leaderErrMess","RenderMenuItem","Link","to","id","top","width","tag","Menu","menu","dishes","map","active","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENT","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","ADD_FEEDBACKS","type","ActionTypes","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","comments","postComment","comment","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","json","addComment","catch","console","log","alert","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","leaders","addFeedbacks","feedbacks","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","color","Component","connect","feedback","newFeedback","RenderLeader","left","object","heading","class","About","leaderItems","title","list","Header","state","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","setState","event","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","onClick","height","isOpen","navbar","NavLink","outline","toggle","innerRef","input","Footer","CommentForm","dishId","rating","RenderDish","RenderComments","commentItems","author","Intl","DateTimeFormat","year","month","day","format","parse","Dishdetail","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","Switch","Route","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","Redirect","location","key","withRouter","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","Feedbacks","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","BrowserRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d39cf9f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3 fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components'; \r\n \r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    } \r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: \"scale(0.5) translateY(-50%)\"\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                        isLoading={props.promosLoading}\r\n                        errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                        isLoading={props.leaderLoading}\r\n                        errMess={props.leaderErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImgOverlay, CardImg, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg top width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle tag=\"h5\">{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.dishes.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n\r\nexport const ADD_FEEDBACKS = 'ADD_FEEDBACK';","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n// dishes\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading());\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes \r\n});\r\n\r\n// Comments \r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments \r\n});\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (comment) => (dispatch) => {\r\n    const newComment = { ...comment, date: new Date().toISOString() };\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { \r\n            console.log('Post comments', error.message); \r\n            alert('Your comment could not be posted\\nError: ', error.message); \r\n        });\r\n};\r\n\r\n// promos\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos \r\n});\r\n\r\n// leaders\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders \r\n});\r\n\r\n// feedback\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    const newFeedback = { ...feedback, date: new Date().toISOString() };\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addFeedbacks(response)))\r\n        .catch(error => { \r\n            console.log('Post feedbacks', error.message); \r\n            alert('Your feedback could not be posted\\nError: ', error.message); \r\n        });\r\n};\r\n\r\nexport const addFeedbacks = (feedbacks) => ({\r\n    type: ActionTypes.ADD_FEEDBACKS,\r\n    payload: feedbacks\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Row, Col, Label } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { postFeedback } from '../redux/ActionCreators';\r\nimport { connect } from 'react-redux';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postFeedback: (feedback) => dispatch(postFeedback(feedback))\r\n});\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.props.postFeedback(values);\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Media } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({ leader }) {\r\n    return (\r\n        <Media tag=\"li\" className=\"mb-4\">\r\n            <Media left top>\r\n                <Media object src={baseUrl + leader.image} alt=\"leader image\" />\r\n            </Media>\r\n            <Media body className=\"ml-5\">\r\n                <Media heading>{leader.name}</Media>\r\n                <span class=\"mt-0 mb-1\">{leader.designation}</span>\r\n                <p class=\"mt-3\">{leader.description}</p>\r\n            </Media>\r\n        </Media>\r\n    );\r\n}\r\n\r\nfunction About({ leaders }) {\r\n    const leaderItems = leaders.leaders.map(leader => {\r\n        return (\r\n            <Fade in>\r\n                <RenderLeader key={leader.id} leader={leader}/>\r\n            </Fade>\r\n        );\r\n    })\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 mb-2\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        <Stagger in>\r\n                            {leaderItems}\r\n                        </Stagger>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;   ","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Jumbotron, Nav, NavbarToggler, Collapse, NavItem,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({ \r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ \r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value +\r\n            \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                                alt=\"Restorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Restorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" \r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"text\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </ React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/home\">Home</Link></li>\r\n                            <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                            <li><Link to=\"/menu\">Menu</Link></li>\r\n                            <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport { Label, Row, Col } from 'reactstrap';\r\nimport { LocalForm, Control, Errors } from 'react-redux-form'; \r\n\r\nconst required = (val) => val && val.length;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst maxLength = (len) => (val) => val && val.length <= len;\r\n\r\nexport class CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({ isModalOpen: !this.state.isModalOpen })\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggle();\r\n        const comment = {\r\n            dishId: this.props.dishId, \r\n            rating: values.rating, \r\n            name: values.name, \r\n            comment: values.comment\r\n        };\r\n        this.props.postComment(comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button \r\n                    outline \r\n                    color=\"secondary\" \r\n                    className=\"btn-min-content\" \r\n                    onClick={this.toggle}\r\n                >\r\n                    <i className='fa fa-pencil' />{' Submit Comment'}\r\n                </Button>\r\n                \r\n                <Modal isOpen={this.state.isModalOpen}>\r\n                    <ModalHeader toggle={this.toggle}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)} >\r\n                            <Col>\r\n                                <Row><Label htmlFor=\"rating\">Rating</Label></Row>\r\n                                <Row>\r\n                                    <Control.select model='.rating' id='rating'\r\n                                        className='w-100 form-control mb-13' name=\"rating\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                            <Col>\r\n                                <Row><Label htmlFor=\"name\" className='submit-row'>Your Name</Label></Row>\r\n                                <Row>\r\n                                    <Control.text model=\".name\" id=\"name\" \r\n                                        name=\"name\" placeholder=\"Your Name\"\r\n                                        validators={{\r\n                                            required, \r\n                                            minLength: minLength(3), \r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                        className='w-100 form-control mb-13'\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be 3 characters or more',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                            <Col>\r\n                                <Row><Label htmlFor=\"comment\" className='submit-row'>Comment</Label></Row>\r\n                                <Row>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" \r\n                                        name=\"comment\" rows=\"5\" \r\n                                        className='w-100 form-control'\r\n                                    />\r\n                                </Row>\r\n                            </Col>\r\n                            \r\n                            <Button type=\"submit\" color=\"primary\" className='submit-row'>Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n};","import React from 'react';\r\nimport { Card, CardImg, CardBody, CardTitle, CardText } from 'reactstrap';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { CommentForm } from './CommentForm';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <FadeTransform in \r\n            transformProps={{\r\n                exitTransform: \"scale(0.5) translateY(-50%)\"\r\n            }}>\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\" className=\"m-1\">{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments, dishId, postComment }) {\r\n    const commentItems = comments.map((comment) => {\r\n        return (\r\n            <Fade in>\r\n                <div key={comment.id}>\r\n                    <div className=\"container\">\r\n                        <ul class=\"list-unstyled\">\r\n                            <li className=\"mb-3 ml-3\">{comment.comment}</li>\r\n                            <li className=\"mb-3 ml-3\">-- {comment.author} , { new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date))) }</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </Fade>\r\n        );\r\n    })\r\n\r\n    return (\r\n        <Card>\r\n            <CardTitle tag=\"h5\" className=\"m-3\">Comments</CardTitle>\r\n            <CardText>\r\n                <Stagger in>\r\n                    {commentItems}\r\n                </Stagger>\r\n            </CardText>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction Dishdetail(props) {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderDish dish={props.dish}/>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dishdetail;","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchComments, fetchDishes, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    postComment: (comment) => dispatch(postComment(comment)),\r\n    fetchComments: () => { dispatch(fetchComments()) },\r\n    fetchPromos: () => { dispatch(fetchPromos()) },\r\n    fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) }\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount(props) {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home dish={this.props.dishes.dishes.filter(dish => dish.featured)[0]} \r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter(promo => promo.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promosErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter(leader => leader.featured)[0]} \r\n                    leaderLoading={this.props.leaders.isLoading}\r\n                    leaderErrMess={this.props.leaders.errMess} />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({match}) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                            <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n                            <Route path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n        \r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            let comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        promotions: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        leaders: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []};\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Feedbacks = (state = {\r\n        feedbacks: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_FEEDBACKS:\r\n            return { feedbacks: action.payload };\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum:'',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react'\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport { Feedbacks } from './feedbacks';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            feedbacks: Feedbacks,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}